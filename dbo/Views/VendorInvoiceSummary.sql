SELECT 
	wrE19."Doc Number" AS c0,
	wrE19."Doc Date" AS c1,
	wrE19."Vendor Code" AS c2,
	wrE19."Vendor Name" AS c3,
	wrE19."Purchase Order Number" AS c4,
	wrE19."Currency Code" AS c5,
	wrE19."Vendor Invoice Date" AS c6,
	wrE19."Post Date" AS c7,
	wrE19."Doc Status" AS c8,
	wrE19."Posted Date" AS c9,
	wrE19."Voiding or Voided Doc Number" AS c10,
	wrE19."Current Balance" AS c11,
	wrE19."Vendor Invoice Amount" AS c12,
	wrE20."INTEGRATION_KEY" AS c13,
	wrE20."INTEGRATION_VALUE_KEY" AS c14,
	wrE19."Vendor Invoice Key" AS c15,
	wrE20."Internal Key" AS c16
FROM (select i.integration_key as "INTEGRATION_KEY", iv.integration_value_key as "INTEGRATION_VALUE_KEY", i.integration_name as "Integration Name", iv.value_type as "Integration Value Type", iv.internal_key as "Internal Key", iv.external_key as "External Key" from integration i join integration_value iv on i.integration_key = iv.integration_key
) wrE20
FULL OUTER JOIN (SELECT pfm.fiscal_month_key                                            as "FISCAL_MONTH_KEY", fd.fin_document_key                                             as "Vendor Invoice Key", fd.document_number                                              as "Doc Number", fd.reference                                                    as "Vendor Invoice or Ref #", fd.document_date                                                as "Doc Date", pt.description                                                  as "Payment Terms", vi.discount_amount                                              as "Discount Amount", vi.invoice_date                                                 as "Vendor Invoice Date", vi.due_date  				                                    as "Due Date", vi.invoice_date + (coalesce(pt.discount_days, 0) * INTERVAL '1' day) as "Discount Date", fd.description                                                  as "Doc Description", vi.invoice_amount                                               as "Vendor Invoice Amount", po.document_number                                              as "Purchase Order Number", cv.customer_key                                                 as "Vendor Key", cv.customer_code                                                as "Vendor Code", cv.customer_name                                                as "Vendor Name", fd.post_date                                                    as "Post Date", case when pfm.period_number < 10 then concat(concat(concat(pfy.name,'-'),'0'),cast(pfm.period_number as varchar(4))) else concat(concat(pfy.name,'-'),cast(pfm.period_number as varchar(4))) end			   											    as "Fiscal Period", fd.comments                                                     as "Comment", fd.status                                                       as "Doc Status",  last_updated_by.first_name 	                                    as "Last Modified By First Name", last_updated_by.last_name 		                                as "Last Modified By Last Name", last_updated_by.username 		                                as "Last Modified By Username",  fd.created_timestamp 		                                    as "Created Date", fd.last_updated_timestamp                                       as "Last Modified Date", fd.submitted_timestamp                                          as "Submitted Date", fd.posted_timestamp                                             as "Posted Date",  created_by.first_name 				                            as "Created By Person First Name", created_by.last_name 				                            as "Created By Person Last Name", created_by.username 					                        as "Created By Person Username", posted_by.first_name 				                            as "Posted By Person First Name", posted_by.last_name 					                        as "Posted By Person Last Name", posted_by.username 					                            as "Posted By Person Username",  submitted_by.first_name 			                            as "Submitted By Person First Name", submitted_by.last_name 			                                as "Submitted By Person Last Name", submitted_by.username 				                            as "Submitted By Person Username",  fd.legal_entity_key                                             as "Legal Entity Key", c.customer_code                                                 as "Legal Entity Code", c.customer_name                                                 as "Legal Entity Name",  coalesce(voiding.document_number, voided.document_number)       as "Voiding or Voided Doc Number", cvi.customer_key												as "Financial Org Key", cvi.customer_code                                               as "Financial Org Code", cvi.customer_name                                               as "Financial Org Name", vi.account_key as "AP Account key", a.account_code                                                  as "AP Account Code", a.description                                                   as "AP Account Name", va.city                                                         as "Remit To Address City", va.country                                                      as "Remit To Address Country", va.street1                                                      as "Remit To Address Line1", va.street2                                                      as "Remit To Address Line2", va.street3                                                      as "Remit To Address Line3", va.postal_code                                                  as "Remit To Address Postal Code", va.state_province                                               as "Remit To Address State",  CASE WHEN fd.posted_timestamp IS NULL THEN vi.invoice_amount ELSE via.balance END                                                                "Current Balance",  CASE WHEN fdr.fin_document_key IS NULL THEN 'No' ELSE 'Yes' END   															as "Recurring", ofd.document_number                                             as "Originating Doc Number", fdr.sequence                                                    as "Occurrence Number", fdr.max_occurrences                                             as "Total Recurrence Number",  vi.payment_on_hold                                              as "Hold Payments", vi.hold_reason                                                  as "Hold Payments Reason", pt.payment_term_key                                             as "Payment Term Key", coalesce(cc.iso_currency_code, 'USD')                           as "Currency Code",  CASE WHEN fd.posted_timestamp IS NULL THEN NULL ELSE vi.local_discount_amount END  															as "Local Discount Amount", CASE WHEN fd.posted_timestamp IS NULL THEN NULL ELSE vi.local_invoice_amount END  									 						as "Local Vendor Invoice Amount",  coalesce(lcc.iso_currency_code, 'USD')  						as "Local Currency Code", CASE WHEN fd.posted_timestamp IS NULL THEN NULL ELSE via.local_balance END  															as "Local Current Balance", case when vi.due_date <  (current_date - INTERVAL '90' day) then '90+ days past due' when vi.due_date <  (current_date - INTERVAL '60' day) then '61-90 days past due' when vi.due_date <  (current_date - INTERVAL '30' day) then '31-60 days past due' when vi.due_date <  (current_date) then '1-30 days past due' else 'Current' end as "Aging", to_char(fd.document_date, 'Mon yyyy')                               as "Invoice Month" FROM fin_document fd LEFT OUTER JOIN fin_document_recurring fdr ON fdr.fin_document_key = fd.fin_document_key LEFT OUTER JOIN fin_document ofd ON ofd.fin_document_key = fdr.orig_fin_document_key JOIN fiscal_month pfm ON fd.post_date BETWEEN pfm.begin_date AND pfm.end_date join fiscal_year pfy on pfy.fiscal_year_key = pfm.fiscal_year_key LEFT OUTER JOIN fin_document voiding ON voiding.fin_document_key = fd.voiding_fin_document_key LEFT OUTER JOIN fin_document voided ON voided.fin_document_key = fd.voided_fin_document_key JOIN vendor_invoice vi ON vi.fin_document_key = fd.fin_document_key LEFT OUTER JOIN purchase_order po ON po.po_key = vi.po_key AND po.orig_po_key = po.po_key JOIN customer c ON c.customer_key = fd.legal_entity_key JOIN payment_term pt ON pt.payment_term_key = vi.payment_term_key join customer cv on cv.customer_key = vi.vendor_org_key left outer join customer_address ca on ca.customer_key = cv.customer_key and ca.default_remit_to = 'Y' left outer join address va on va.address_key = ca.address_key join person created_by ON created_by.person_key = fd.CREATED_BY left outer join person posted_by ON posted_by.person_key = fd.posted_by left outer join person submitted_by ON submitted_by.person_key = fd.submitted_by left outer join person last_updated_by ON last_updated_by.person_key = fd.last_updated_by join customer cvi  ON vi.organization_key = cvi.customer_key join account a on a.account_key = vi.account_key  LEFT OUTER JOIN ( SELECT fin_document_key, SUM(invoice_amount - applied - discount) balance, SUM(local_invoice_amount - local_applied - local_discount) local_balance FROM vendor_invoice_activity GROUP BY fin_document_key ) via ON via.fin_document_key = vi.fin_document_key left outer join currency_code cc on cc.currency_code_key = cv.currency_code_key left outer join currency_code lcc on lcc.currency_code_key = fd.local_currency WHERE fd.fin_document_key IS NOT NULL  and  (exists (select null from member where person_key = '3896' and role_key = 1))  or (exists (select null from org_access_person where person_key = '3896' and role_key in (27,28,29) and global_access = 'Y'))  or (c.customer_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key in (27,28,29) and oap.access_type in (2,3)))  or ( (exists ( select count(*), person_key, role_key from org_access_person where person_key = '3896' and role_key = 56 and access_type in (2,6) and global_access = 'Y' group by person_key, role_key having count(*) = 2 ))  or ( (c.customer_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 56 and oap.access_type in (2,3)) and exists (select null from org_access_person where person_key = '3896' and role_key = 56 and access_type = 6 and global_access = 'Y')) )  or ( (exists (select null from org_access_person where person_key = '3896' and role_key = 56 and access_type = 2 and global_access = 'Y') and cv.customer_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 56 and oap.access_type = 6)) )  or (c.customer_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 56 and oap.access_type in (2,3)) and cv.customer_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 56 and oap.access_type = 6) ) )  ORDER BY fd.document_number
) wrE19 ON (
	wrE20."Internal Key" = wrE19."Vendor Invoice Key"
)
WHERE 
	wrE19."Doc Date" BETWEEN '2025-08-01 00:00:00.000' AND '2025-08-31 23:59:59.997'
ORDER BY 
	wrE19."Doc Number" ASC