SELECT 
	wrE19."Fiscal Period" AS c0,
	wrE20."Acct Fin Lv2 Code" AS c1,
	wrE20."Acct Fin Lv2 Name" AS c2,
	wrE20."Acct Fin Lv3 Code" AS c3,
	wrE20."Acct Fin Lv3 Name" AS c4,
	wrE20."Acct Fin Lv4 Code" AS c5,
	wrE20."Acct Fin Lv4 Name" AS c6,
	wrE20."Acct Fin Lv5 Code" AS c7,
	wrE20."Acct Fin Lv5 Name" AS c8,
	wrE20."Acct Fin Lv6 Code" AS c9,
	wrE20."Acct Fin Lv6 Name" AS c10,
	wrE20."Acct Type" AS c11,
	wrE19."Actual" AS c12,
	wrE19."Acct Key" AS c13,
	wrE19."Organization Key" AS c14,
	wrE19."Fiscal Month Key" AS c15,
	wrE19."Actual / Budget Name" AS c16,
	wrE20."ACCOUNT_KEY" AS c17,
	wrE9."CUSTOMER_KEY" AS c18,
	wrE21."Fiscal Month Key" AS c19,
	wrE19."Fin/Budget Org Code" AS c20
FROM (select x.account_key                   as "Acct Key", x.organization_key              as "Organization Key", x.fiscal_month_key              as "Fiscal Month Key", x.account_code                  as "Acct Code", x.description                   as "Acct Description", x.acct_type_order               as "Acct Type Order", x.acct_type                     as "Acct Type", x.fin_org_code                  as "Fin/Budget Org Code", x.fin_org_name                  as "Fin/Budget Org Name", x.fiscal_period                 as "Fiscal Period", x.le_org_code                   as "Legal Entity Org Code", x.le_org_name                   as "Legal Entity Org Name", x.act_budname                   as "Actual / Budget Name", sum(x.actual)                   as "Actual", sum(x.budget)                   as "Budget", sum(x.net_amount)               as "Net Amount (Credit - Debit)", x.elimination_flag              as "Elimination Org Indicator", sum(x.local_actual)             as "Local Actual", sum(x.local_net_amount)         as "Local Net Amount (Credit - Debit)", x.local_currency_code           as "Local Currency Code" from (select gl.account_key, gl.organization_key, gl.fiscal_month_key, a.account_code, a.description, case a.type when 'A' then 1 when 'L' then 2 when 'R' then 3 when 'E' then 4 end acct_type_order, case a.type when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end acct_type, org.customer_code   fin_org_code, org.customer_name   fin_org_name, org.transact_elimination_flag elimination_flag, case when fm.period_number < 10 then concat(concat(concat(fy.name,'-'),'0'),cast(fm.period_number as varchar(4))) else concat(concat(fy.name,'-'),cast(fm.period_number as varchar(4))) end					fiscal_period, le.customer_code    le_org_code, le.customer_name    le_org_name, 'Actual'            act_budname, case a.type when 'R' then (gl.credit_amount - gl.debit_amount) else          (gl.debit_amount - gl.credit_amount) end                 actual, case a.type when 'R' then (gl.local_credit_amount - gl.local_debit_amount) else          (gl.local_debit_amount - gl.local_credit_amount) end                 local_actual, null                budget, (gl.credit_amount - gl.debit_amount) as net_amount, (gl.local_credit_amount - gl.local_debit_amount) as local_net_amount, cc.iso_currency_code    as local_currency_code from general_ledger gl  join            account          a   on a.account_key = gl.account_key join            customer         org on org.customer_key = gl.organization_key left outer join customer         le  on le.customer_key = org.legal_entity_key join            fiscal_month     fm  on fm.fiscal_month_key = gl.fiscal_month_key join            fiscal_year      fy  on fy.fiscal_year_key = fm.fiscal_year_key join            currency_code    cc  on cc.currency_code_key = gl.local_currency where a.type in ('R','E') and (fm.begin_date >= to_date(concat('01/', to_char(current_date,'MM/YYYY')),'DD/MM/YYYY') - INTERVAL '36' month) union all select bd.account_key, c.customer_key, bd.fiscal_month_key,  a.account_code, a.description, case a.type when 'A' then 1 when 'L' then 2 when 'R' then 3 when 'E' then 4 end     acct_type_order, case a.type when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end     acct_type, c.customer_code     fin_org_code, c.customer_name     fin_org_name, c.transact_elimination_flag elimination_flag, case when fm.period_number < 10 then concat(concat(concat(fy.name,'-'),'0'),cast(fm.period_number as varchar(4))) else concat(concat(fy.name,'-'),cast(fm.period_number as varchar(4))) end					fiscal_period, cle.customer_code   le_org_code, cle.customer_name   le_org_name, bn.budget_name      act_budname, null                actual, null                local_actual, bd.amount           budget, case when a.type = 'R' then bd.amount else (bd.amount * (-1)) end					net_amount, case when a.type = 'R' then bd.amount else (bd.amount * (-1)) end					local_net_amount, cc.iso_currency_code    as local_currency_code  from budget_detail bd  join            account                 a       on a.account_key = bd.account_key join            budget_organization     bo      on bo.budget_organization_key = bd.budget_organization_key join            budget                  b       on b.budget_key = bo.budget_key join            budget_name             bn      on bn.budget_name_key = b.budget_name_key join            customer                c       on c.customer_key = bo.customer_key join            fiscal_month            fm      on fm.fiscal_month_key = bd.fiscal_month_key join            fiscal_year             fy      on fy.fiscal_year_key = fm.fiscal_year_key left outer join customer                cle     on cle.customer_key = c.legal_entity_key left outer join currency_code           cc      on cc.currency_code_key = cle.currency_code_key  where b.type = 'I' and (fm.begin_date >= to_date(concat('01/', to_char(current_date,'MM/YYYY')),'DD/MM/YYYY') - INTERVAL '36' month) ) x where (exists (select null from member where person_key = '3896' and role_key = 1)) OR (exists (select null from org_access_person where person_key = '3896' and role_key = 33 and global_access = 'Y')) OR (x.organization_key in (   select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 33 and oap.access_type = 2 and legal_entity_ind = 'N'  UNION ALL  select customer_key from customer cust where cust.legal_entity_key in ( select customer_key from access_customer_view v join org_access_person oap on oap.org_access_person_key = v.org_access_person_key where oap.person_key = '3896' and oap.role_key = 33 and oap.access_type = 2 and legal_entity_ind = 'Y' ) ) )  group by x.account_key, x.organization_key, x.fiscal_month_key, x.account_code, x.description, x.acct_type_order, x.acct_type, x.fin_org_code, x.fin_org_name, x.fiscal_period, x.le_org_code, x.le_org_name, x.act_budname, x.elimination_flag, x.local_currency_code order by x.account_key, x.organization_key, x.fiscal_period 
) wrE19
INNER JOIN (select a.account_key				as "ACCOUNT_KEY", a.account_code              as "Acct Code", a.description               as "Acct Description", case a.type when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Type", case a.type when 'A' then 1 when 'L' then 2 when 'R' then 3 when 'E' then 4 end                         as "Acct Type Order", a.active                    as "Acct Active", a.entry_allowed             as "Acct Entry Allowed", a.begin_date                as "Acct Begin Date", a.end_date                  as "Acct End Date", a.project_required          as "Acct Proj Required", acct_fin_tree1.account_code as "Acct Fin Lv1 Code", acct_fin_tree1.description  as "Acct Fin Lv1 Name", coalesce(acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv2 Code", coalesce(acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv2 Name", coalesce(acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv3 Code", coalesce(acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv3 Name", coalesce(acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv4 Code", coalesce(acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv4 Name", coalesce(acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv5 Code", coalesce(acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv5 Name", coalesce(acct_fin_tree6.account_code, acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv6 Code", coalesce(acct_fin_tree6.description, acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv6 Name", coalesce(acct_fin_tree7.account_code, acct_fin_tree6.account_code, acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv7 Code", coalesce(acct_fin_tree7.description, acct_fin_tree6.description, acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv7 Name", coalesce(acct_fin_tree8.account_code, acct_fin_tree7.account_code, acct_fin_tree6.account_code, acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv8 Code", coalesce(acct_fin_tree8.description, acct_fin_tree7.description, acct_fin_tree6.description, acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv8 Name", coalesce(acct_fin_tree9.account_code, acct_fin_tree8.account_code, acct_fin_tree7.account_code, acct_fin_tree6.account_code, acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv9 Code", coalesce(acct_fin_tree9.description, acct_fin_tree8.description, acct_fin_tree7.description, acct_fin_tree6.description, acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv9 Name", coalesce(acct_fin_tree10.account_code, acct_fin_tree9.account_code, acct_fin_tree8.account_code, acct_fin_tree7.account_code, acct_fin_tree6.account_code, acct_fin_tree5.account_code, acct_fin_tree4.account_code, acct_fin_tree3.account_code, acct_fin_tree2.account_code, acct_fin_tree1.account_code) as "Acct Fin Lv10 Code", coalesce(acct_fin_tree10.description, acct_fin_tree9.description, acct_fin_tree8.description, acct_fin_tree7.description, acct_fin_tree6.description, acct_fin_tree5.description, acct_fin_tree4.description, acct_fin_tree3.description, acct_fin_tree2.description, acct_fin_tree1.description) as "Acct Fin Lv10 Name", acct_cp_tree1.account_code as "Acct Cost Pool Lv1 Code", acct_cp_tree1.description  as "Acct Cost Pool Lv1 Name", case acct_fin_tree1.type when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv1 Type", coalesce(acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv2 Code", coalesce(acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv2 Name", case coalesce(acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv2 Type", coalesce(acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv3 Code", coalesce(acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv3 Name", case coalesce(acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv3 Type", coalesce(acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv4 Code", coalesce(acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv4 Name", case coalesce(acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv4 Type", coalesce(acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv5 Code", coalesce(acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv5 Name", case coalesce(acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv5 Type", coalesce(acct_cp_tree6.account_code, acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv6 Code", coalesce(acct_cp_tree6.description, acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv6 Name", case coalesce( acct_fin_tree6.type, acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv6 Type", coalesce(acct_cp_tree7.account_code, acct_cp_tree6.account_code, acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv7 Code", coalesce(acct_cp_tree7.description, acct_cp_tree6.description, acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv7 Name", case coalesce(acct_fin_tree7.type, acct_fin_tree6.type, acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv7 Type", coalesce(acct_cp_tree8.account_code, acct_cp_tree7.account_code, acct_cp_tree6.account_code, acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv8 Code", coalesce(acct_cp_tree8.description, acct_cp_tree7.description, acct_cp_tree6.description, acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv8 Name", case coalesce(acct_fin_tree8.type, acct_fin_tree7.type, acct_fin_tree6.type, acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv8 Type", coalesce(acct_cp_tree9.account_code, acct_cp_tree8.account_code, acct_cp_tree7.account_code, acct_cp_tree6.account_code, acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv9 Code", coalesce(acct_cp_tree9.description, acct_cp_tree8.description, acct_cp_tree7.description, acct_cp_tree6.description, acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv9 Name", case coalesce(acct_fin_tree9.type, acct_fin_tree8.type, acct_fin_tree7.type, acct_fin_tree6.type, acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv9 Type", coalesce(acct_cp_tree10.account_code, acct_cp_tree9.account_code, acct_cp_tree8.account_code, acct_cp_tree7.account_code, acct_cp_tree6.account_code, acct_cp_tree5.account_code, acct_cp_tree4.account_code, acct_cp_tree3.account_code, acct_cp_tree2.account_code, acct_cp_tree1.account_code) as "Acct Cost Pool Lv10 Code", coalesce(acct_cp_tree10.description, acct_cp_tree9.description, acct_cp_tree8.description, acct_cp_tree7.description, acct_cp_tree6.description, acct_cp_tree5.description, acct_cp_tree4.description, acct_cp_tree3.description, acct_cp_tree2.description, acct_cp_tree1.description) as "Acct Cost Pool Lv10 Name", case coalesce(acct_fin_tree10.type, acct_fin_tree9.type, acct_fin_tree8.type, acct_fin_tree7.type, acct_fin_tree6.type, acct_fin_tree5.type, acct_fin_tree4.type, acct_fin_tree3.type, acct_fin_tree2.type, acct_fin_tree1.type) when 'A' then 'Asset' when 'E' then 'Expense' when 'L' then 'Liability' when 'R' then 'Revenue' else          'Unknown Account Type' end                         as "Acct Fin Lv10 Type", a.hide_income_stmt_hdr  as "Acct Hide Income Stmt Hdr", a.category_1099         as "Acct Cat 1099", case ca.category when 'O' then 'Operating Activities' when 'I' then 'Investing Activities' when 'F' then 'Financing Activities' when 'C' then 'Cash' else          ' ' end                         									as "Cash Flow Category", CASE WHEN ca.category in('O', 'I', 'F', 'C') THEN coalesce(rollup_account.account_code,a.account_code) ELSE rollup_account.account_code END                                                             as "CFR Account Code", CASE WHEN ca.category in('O', 'I', 'F', 'C') THEN coalesce(rollup_account.description,a.description) ELSE rollup_account.description END                                                             as "CFR Account Description" from account a left outer join (select acpt.node_key acct_key, max(case when p.tree_level = 0 then p.node_key else null end) acct_key_0, max(case when p.tree_level = 1 then p.node_key else null end) acct_key_1, max(case when p.tree_level = 2 then p.node_key else null end) acct_key_2, max(case when p.tree_level = 3 then p.node_key else null end) acct_key_3, max(case when p.tree_level = 4 then p.node_key else null end) acct_key_4, max(case when p.tree_level = 5 then p.node_key else null end) acct_key_5, max(case when p.tree_level = 6 then p.node_key else null end) acct_key_6, max(case when p.tree_level = 7 then p.node_key else null end) acct_key_7, max(case when p.tree_level = 8 then p.node_key else null end) acct_key_8, max(case when p.tree_level = 9 then p.node_key else null end) acct_key_9 from acct_cost_pool_tree acpt join acct_cost_pool_tree p on acpt.left_visit between p.left_visit and p.right_visit group by acpt.node_key) acct_cp_tree_accts on acct_cp_tree_accts.acct_key = a.account_key  left outer join account acct_cp_tree1 on acct_cp_tree1.account_key = acct_cp_tree_accts.acct_key_0 left outer join account acct_cp_tree2 on acct_cp_tree2.account_key = acct_cp_tree_accts.acct_key_1 left outer join account acct_cp_tree3 on acct_cp_tree3.account_key = acct_cp_tree_accts.acct_key_2 left outer join account acct_cp_tree4 on acct_cp_tree4.account_key = acct_cp_tree_accts.acct_key_3 left outer join account acct_cp_tree5 on acct_cp_tree5.account_key = acct_cp_tree_accts.acct_key_4 left outer join account acct_cp_tree6 on acct_cp_tree6.account_key = acct_cp_tree_accts.acct_key_5 left outer join account acct_cp_tree7 on acct_cp_tree7.account_key = acct_cp_tree_accts.acct_key_6 left outer join account acct_cp_tree8 on acct_cp_tree8.account_key = acct_cp_tree_accts.acct_key_7 left outer join account acct_cp_tree9 on acct_cp_tree9.account_key = acct_cp_tree_accts.acct_key_8 left outer join account acct_cp_tree10 on acct_cp_tree10.account_key = acct_cp_tree_accts.acct_key_9 left outer join (select aft.node_key acct_key, max(case when p.tree_level = 0 then p.node_key else null end) acct_key_0, max(case when p.tree_level = 1 then p.node_key else null end) acct_key_1, max(case when p.tree_level = 2 then p.node_key else null end) acct_key_2, max(case when p.tree_level = 3 then p.node_key else null end) acct_key_3, max(case when p.tree_level = 4 then p.node_key else null end) acct_key_4, max(case when p.tree_level = 5 then p.node_key else null end) acct_key_5, max(case when p.tree_level = 6 then p.node_key else null end) acct_key_6, max(case when p.tree_level = 7 then p.node_key else null end) acct_key_7, max(case when p.tree_level = 8 then p.node_key else null end) acct_key_8, max(case when p.tree_level = 9 then p.node_key else null end) acct_key_9 from acct_fin_tree aft join acct_fin_tree p on aft.left_visit between p.left_visit and p.right_visit group by aft.node_key) acct_fin_tree_accts on acct_fin_tree_accts.acct_key = a.account_key  left outer join account acct_fin_tree1 on acct_fin_tree1.account_key = acct_fin_tree_accts.acct_key_0 left outer join account acct_fin_tree2 on acct_fin_tree2.account_key = acct_fin_tree_accts.acct_key_1 left outer join account acct_fin_tree3 on acct_fin_tree3.account_key = acct_fin_tree_accts.acct_key_2 left outer join account acct_fin_tree4 on acct_fin_tree4.account_key = acct_fin_tree_accts.acct_key_3 left outer join account acct_fin_tree5 on acct_fin_tree5.account_key = acct_fin_tree_accts.acct_key_4 left outer join account acct_fin_tree6 on acct_fin_tree6.account_key = acct_fin_tree_accts.acct_key_5 left outer join account acct_fin_tree7 on acct_fin_tree7.account_key = acct_fin_tree_accts.acct_key_6 left outer join account acct_fin_tree8 on acct_fin_tree8.account_key = acct_fin_tree_accts.acct_key_7 left outer join account acct_fin_tree9 on acct_fin_tree9.account_key = acct_fin_tree_accts.acct_key_8 left outer join account acct_fin_tree10 on acct_fin_tree10.account_key = acct_fin_tree_accts.acct_key_9 left outer join cashflow_account ca on a.account_key = ca.cashflow_account_key left outer join account rollup_account on rollup_account.account_key = ca.rollup_account_key 
) wrE20 ON (
	wrE19."Acct Key" = wrE20."ACCOUNT_KEY"
)
INNER JOIN (select fm.fiscal_month_key     as "Fiscal Month Key", fm.period_number        as "Fiscal Month", fm.begin_date           as "Fiscal Month Begin Date", fm.end_date             as "Fiscal Month End Date", case when fm.period_number < 10 then concat(concat(concat(fy.name,'-'),'0'),cast(fm.period_number as varchar(4))) else concat(concat(fy.name,'-'),cast(fm.period_number as varchar(4))) end					    as "Fiscal Period", case when fm.period_number in (1,2,3)     then 'Q1' when fm.period_number in (4,5,6)     then 'Q2' when fm.period_number in (7,8,9)     then 'Q3' when fm.period_number in (10,11,12)  then 'Q4' end                     as "Fiscal Quarter", fq.begin_date           as "Fiscal Quarter Begin Date", fq.end_date             as "Fiscal Quarter End Date", fy.name                 as "Fiscal Year", fy.begin_date           as "Fiscal Year Begin Date", fy.end_date             as "Fiscal Year End Date" from fiscal_month fm  join fiscal_year            fy  on fy.fiscal_year_key = fm.fiscal_year_key join fiscal_quarter         fq  on fq.fiscal_quarter_key = fm.fiscal_quarter_key  
) wrE21 ON (
	wrE19."Fiscal Month Key" = wrE21."Fiscal Month Key"
)
INNER JOIN (with consol_tree_orgs as (select c.node_key org_key, max(case when p.tree_level = 0 then p.node_key else null end) org_key_0, max(case when p.tree_level = 1 then p.node_key else null end) org_key_1, max(case when p.tree_level = 2 then p.node_key else null end) org_key_2, max(case when p.tree_level = 3 then p.node_key else null end) org_key_3, max(case when p.tree_level = 4 then p.node_key else null end) org_key_4, max(case when p.tree_level = 5 then p.node_key else null end) org_key_5 from org_consolidation_tree c join org_consolidation_tree p on c.left_visit between p.left_visit and p.right_visit group by c.node_key) select c.customer_key			as "CUSTOMER_KEY", c.email_1099			as "EMAIL_1099", c.vendor_1099			as "VENDOR_1099", c.recipient_name_1099	as "RECIPIENT_NAME_1099", c.federal_tax_id		as "FEDERAL_TAX_ID", c.federal_tax_id_type	as "FEDERAL_TAX_ID_TYPE", c.financial_org			as "FINANCIAL_ORG", c.legal_entity			as "LEGAL_ENTITY", c.active				as "ACTIVE", c.classification		as "CLASSIFICATION", c.customer_code			as "CUSTOMER_CODE", org_cost_pool_tree1.customer_code as "Org Cost Pool Lv1 Code", org_cost_pool_tree1.customer_name as "Org Cost Pool Lv1 Name", coalesce(org_cost_pool_tree2.customer_code, org_cost_pool_tree1.customer_code) as "Org Cost Pool Lv2 Code", coalesce(org_cost_pool_tree2.customer_name, org_cost_pool_tree1.customer_name) as "Org Cost Pool Lv2 Name", coalesce(org_cost_pool_tree3.customer_code, org_cost_pool_tree2.customer_code, org_cost_pool_tree1.customer_code) as "Org Cost Pool Lv3 Code", coalesce(org_cost_pool_tree3.customer_name, org_cost_pool_tree2.customer_name, org_cost_pool_tree1.customer_name) as "Org Cost Pool Lv3 Name", coalesce(org_cost_pool_tree4.customer_code, org_cost_pool_tree3.customer_code, org_cost_pool_tree2.customer_code, org_cost_pool_tree1.customer_code) as "Org Cost Pool Lv4 Code", coalesce(org_cost_pool_tree4.customer_name, org_cost_pool_tree3.customer_name, org_cost_pool_tree2.customer_name, org_cost_pool_tree1.customer_name) as "Org Cost Pool Lv4 Name", coalesce(org_cost_pool_tree5.customer_code, org_cost_pool_tree4.customer_code, org_cost_pool_tree3.customer_code, org_cost_pool_tree2.customer_code, org_cost_pool_tree1.customer_code) as "Org Cost Pool Lv5 Code", coalesce(org_cost_pool_tree5.customer_name, org_cost_pool_tree4.customer_name, org_cost_pool_tree3.customer_name, org_cost_pool_tree2.customer_name, org_cost_pool_tree1.customer_name) as "Org Cost Pool Lv5 Name", coalesce(org_cost_pool_tree6.customer_code, org_cost_pool_tree5.customer_code, org_cost_pool_tree4.customer_code, org_cost_pool_tree3.customer_code, org_cost_pool_tree2.customer_code, org_cost_pool_tree1.customer_code) as "Org Cost Pool Lv6 Code", coalesce(org_cost_pool_tree6.customer_name, org_cost_pool_tree5.customer_name, org_cost_pool_tree4.customer_name, org_cost_pool_tree3.customer_name, org_cost_pool_tree2.customer_name, org_cost_pool_tree1.customer_name) as "Org Cost Pool Lv6 Name", c.entry_allowed			as "ENTRY_ALLOWED", c.begin_date			as "BEGIN_DATE", c.end_date				as "END_DATE", c.account_number		as "ACCOUNT_NUMBER", org_fin_tree1.customer_code as "Org Fin Lv1 Code", org_fin_tree1.customer_name as "Org Fin Lv1 Name", coalesce(org_fin_tree2.customer_code, org_fin_tree1.customer_code) as "Org Fin Lv2 Code", coalesce(org_fin_tree2.customer_name, org_fin_tree1.customer_name) as "Org Fin Lv2 Name", coalesce(org_fin_tree3.customer_code, org_fin_tree2.customer_code, org_fin_tree1.customer_code) as "Org Fin Lv3 Code", coalesce(org_fin_tree3.customer_name, org_fin_tree2.customer_name, org_fin_tree1.customer_name) as "Org Fin Lv3 Name", coalesce(org_fin_tree4.customer_code, org_fin_tree3.customer_code, org_fin_tree2.customer_code, org_fin_tree1.customer_code) as "Org Fin Lv4 Code", coalesce(org_fin_tree4.customer_name, org_fin_tree3.customer_name, org_fin_tree2.customer_name, org_fin_tree1.customer_name) as "Org Fin Lv4 Name", coalesce(org_fin_tree5.customer_code, org_fin_tree4.customer_code, org_fin_tree3.customer_code, org_fin_tree2.customer_code, org_fin_tree1.customer_code) as "Org Fin Lv5 Code", coalesce(org_fin_tree5.customer_name, org_fin_tree4.customer_name, org_fin_tree3.customer_name, org_fin_tree2.customer_name, org_fin_tree1.customer_name) as "Org Fin Lv5 Name", coalesce(org_fin_tree6.customer_code, org_fin_tree5.customer_code, org_fin_tree4.customer_code, org_fin_tree3.customer_code, org_fin_tree2.customer_code, org_fin_tree1.customer_code) as "Org Fin Lv6 Code", coalesce(org_fin_tree6.customer_name, org_fin_tree5.customer_name, org_fin_tree4.customer_name, org_fin_tree3.customer_name, org_fin_tree2.customer_name, org_fin_tree1.customer_name) as "Org Fin Lv6 Name", c.industry				as "INDUSTRY", c.sic_code				as "SIC_CODE", c.customer_name			as "CUSTOMER_NAME", org_org_tree1.customer_code as "Org Org Lv1 Code", org_org_tree1.customer_name as "Org Org Lv1 Name", coalesce(org_org_tree2.customer_code, org_org_tree1.customer_code) as "Org Org Lv2 Code", coalesce(org_org_tree2.customer_name, org_org_tree1.customer_name) as "Org Org Lv2 Name", coalesce(org_org_tree3.customer_code, org_org_tree2.customer_code, org_org_tree1.customer_code) as "Org Org Lv3 Code", coalesce(org_org_tree3.customer_name, org_org_tree2.customer_name, org_org_tree1.customer_name) as "Org Org Lv3 Name", coalesce(org_org_tree4.customer_code, org_org_tree3.customer_code, org_org_tree2.customer_code, org_org_tree1.customer_code) as "Org Org Lv4 Code", coalesce(org_org_tree4.customer_name, org_org_tree3.customer_name, org_org_tree2.customer_name, org_org_tree1.customer_name) as "Org Org Lv4 Name", coalesce(org_org_tree5.customer_code, org_org_tree4.customer_code, org_org_tree3.customer_code, org_org_tree2.customer_code, org_org_tree1.customer_code) as "Org Org Lv5 Code", coalesce(org_org_tree5.customer_name, org_org_tree4.customer_name, org_org_tree3.customer_name, org_org_tree2.customer_name, org_org_tree1.customer_name) as "Org Org Lv5 Name", coalesce(org_org_tree6.customer_code, org_org_tree5.customer_code, org_org_tree4.customer_code, org_org_tree3.customer_code, org_org_tree2.customer_code, org_org_tree1.customer_code) as "Org Org Lv6 Code", coalesce(org_org_tree6.customer_name, org_org_tree5.customer_name, org_org_tree4.customer_name, org_org_tree3.customer_name, org_org_tree2.customer_name, org_org_tree1.customer_name) as "Org Org Lv6 Name", coalesce(consol_org_tree1.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv1 Code", coalesce(consol_org_tree1.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv1 Name", coalesce(consol_org_tree2.customer_code, consol_org_tree1.customer_code, le_consol_org_tree2.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv2 Code", coalesce(consol_org_tree2.customer_name, consol_org_tree1.customer_name, le_consol_org_tree2.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv2 Name", coalesce(consol_org_tree3.customer_code, consol_org_tree2.customer_code, consol_org_tree1.customer_code, le_consol_org_tree3.customer_code, le_consol_org_tree2.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv3 Code", coalesce(consol_org_tree3.customer_name, consol_org_tree2.customer_name, consol_org_tree1.customer_name, le_consol_org_tree3.customer_name, le_consol_org_tree2.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv3 Name", coalesce(consol_org_tree4.customer_code, consol_org_tree3.customer_code, consol_org_tree2.customer_code, consol_org_tree1.customer_code, le_consol_org_tree4.customer_code, le_consol_org_tree3.customer_code, le_consol_org_tree2.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv4 Code", coalesce(consol_org_tree4.customer_name, consol_org_tree3.customer_name, consol_org_tree2.customer_name, consol_org_tree1.customer_name, le_consol_org_tree4.customer_name, le_consol_org_tree3.customer_name, le_consol_org_tree2.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv4 Name", coalesce(consol_org_tree5.customer_code, consol_org_tree4.customer_code, consol_org_tree3.customer_code, consol_org_tree2.customer_code, consol_org_tree1.customer_code, le_consol_org_tree5.customer_code, le_consol_org_tree4.customer_code, le_consol_org_tree3.customer_code, le_consol_org_tree2.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv5 Code", coalesce(consol_org_tree5.customer_name, consol_org_tree4.customer_name, consol_org_tree3.customer_name, consol_org_tree2.customer_name, consol_org_tree1.customer_name, le_consol_org_tree5.customer_name, le_consol_org_tree4.customer_name, le_consol_org_tree3.customer_name, le_consol_org_tree2.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv5 Name", coalesce(consol_org_tree6.customer_code, consol_org_tree5.customer_code, consol_org_tree4.customer_code, consol_org_tree3.customer_code, consol_org_tree2.customer_code, consol_org_tree1.customer_code, le_consol_org_tree6.customer_code, le_consol_org_tree5.customer_code, le_consol_org_tree4.customer_code, le_consol_org_tree3.customer_code, le_consol_org_tree2.customer_code, le_consol_org_tree1.customer_code) as "Org Consolidation Lv6 Code", coalesce(consol_org_tree6.customer_name, consol_org_tree5.customer_name, consol_org_tree4.customer_name, consol_org_tree3.customer_name, consol_org_tree2.customer_name, consol_org_tree1.customer_name, le_consol_org_tree6.customer_name, le_consol_org_tree5.customer_name, le_consol_org_tree4.customer_name, le_consol_org_tree3.customer_name, le_consol_org_tree2.customer_name, le_consol_org_tree1.customer_name) as "Org Consolidation Lv6 Name", c.sector						as "SECTOR", c.customer_size					as "CUSTOMER_SIZE", c.stock_symbol					as "STOCK_SYMBOL", ct.customer_type				as "CUSTOMER_TYPE", c.user01                        as "Org User01", c.user02                        as "Org User02", c.user03                        as "Org User03", c.user04                        as "Org User04", c.user05                        as "Org User05", c.user06                        as "Org User06", c.user07                        as "Org User07", c.user08                        as "Org User08", c.user09                        as "Org User09", c.user10                        as "Org User10", c.user11                        as "Org User11", c.user12                        as "Org User12", c.user13                        as "Org User13", c.user14                        as "Org User14", c.user15                        as "Org User15", c.user16                        as "Org User16", c.user17                        as "Org User17", c.user18                        as "Org User18", c.user19                        as "Org User19", c.user20                        as "Org User20", cgl.customer_code               as "LE Default Post Org", cle.customer_code               as "Org's Legal Entity Code", c.transact_elimination_flag     as "Elimination Org Indicator" from customer c left outer join customer_type  ct   on ct.customer_type_key = c.customer_type_key left outer join customer       cgl  on cgl.customer_key = c.default_gl_post_org_key left outer join customer       cle  on cle.customer_key = c.legal_entity_key left outer join (select c.node_key org_key, max(case when p.tree_level = 0 then p.node_key else null end) org_key_0, max(case when p.tree_level = 1 then p.node_key else null end) org_key_1, max(case when p.tree_level = 2 then p.node_key else null end) org_key_2, max(case when p.tree_level = 3 then p.node_key else null end) org_key_3, max(case when p.tree_level = 4 then p.node_key else null end) org_key_4, max(case when p.tree_level = 5 then p.node_key else null end) org_key_5 from org_cost_pool_tree c join org_cost_pool_tree p on c.left_visit between p.left_visit and p.right_visit group by c.node_key) org_cost_pool_tree_orgs on org_cost_pool_tree_orgs.org_key = c.customer_key  left outer join customer org_cost_pool_tree1 on org_cost_pool_tree1.customer_key = org_cost_pool_tree_orgs.org_key_0 left outer join customer org_cost_pool_tree2 on org_cost_pool_tree2.customer_key = org_cost_pool_tree_orgs.org_key_1 left outer join customer org_cost_pool_tree3 on org_cost_pool_tree3.customer_key = org_cost_pool_tree_orgs.org_key_2 left outer join customer org_cost_pool_tree4 on org_cost_pool_tree4.customer_key = org_cost_pool_tree_orgs.org_key_3 left outer join customer org_cost_pool_tree5 on org_cost_pool_tree5.customer_key = org_cost_pool_tree_orgs.org_key_4 left outer join customer org_cost_pool_tree6 on org_cost_pool_tree6.customer_key = org_cost_pool_tree_orgs.org_key_5 left outer join (select c.node_key org_key, max(case when p.tree_level = 0 then p.node_key else null end) org_key_0, max(case when p.tree_level = 1 then p.node_key else null end) org_key_1, max(case when p.tree_level = 2 then p.node_key else null end) org_key_2, max(case when p.tree_level = 3 then p.node_key else null end) org_key_3, max(case when p.tree_level = 4 then p.node_key else null end) org_key_4, max(case when p.tree_level = 5 then p.node_key else null end) org_key_5 from org_fin_tree c join org_fin_tree p on c.left_visit between p.left_visit and p.right_visit group by c.node_key) org_fin_tree_orgs on org_fin_tree_orgs.org_key = c.customer_key left outer join customer org_fin_tree1 on org_fin_tree1.customer_key = org_fin_tree_orgs.org_key_0 left outer join customer org_fin_tree2 on org_fin_tree2.customer_key = org_fin_tree_orgs.org_key_1 left outer join customer org_fin_tree3 on org_fin_tree3.customer_key = org_fin_tree_orgs.org_key_2 left outer join customer org_fin_tree4 on org_fin_tree4.customer_key = org_fin_tree_orgs.org_key_3 left outer join customer org_fin_tree5 on org_fin_tree5.customer_key = org_fin_tree_orgs.org_key_4 left outer join customer org_fin_tree6 on org_fin_tree6.customer_key = org_fin_tree_orgs.org_key_5 left outer join (select c.node_key org_key, max(case when p.tree_level = 0 then p.node_key else null end) org_key_0, max(case when p.tree_level = 1 then p.node_key else null end) org_key_1, max(case when p.tree_level = 2 then p.node_key else null end) org_key_2, max(case when p.tree_level = 3 then p.node_key else null end) org_key_3, max(case when p.tree_level = 4 then p.node_key else null end) org_key_4, max(case when p.tree_level = 5 then p.node_key else null end) org_key_5 from org_tree c join org_tree p on c.left_visit between p.left_visit and p.right_visit group by c.node_key) org_org_tree_orgs on org_org_tree_orgs.org_key = c.customer_key left outer join customer org_org_tree1 on org_org_tree1.customer_key = org_org_tree_orgs.org_key_0 left outer join customer org_org_tree2 on org_org_tree2.customer_key = org_org_tree_orgs.org_key_1 left outer join customer org_org_tree3 on org_org_tree3.customer_key = org_org_tree_orgs.org_key_2 left outer join customer org_org_tree4 on org_org_tree4.customer_key = org_org_tree_orgs.org_key_3 left outer join customer org_org_tree5 on org_org_tree5.customer_key = org_org_tree_orgs.org_key_4 left outer join customer org_org_tree6 on org_org_tree6.customer_key = org_org_tree_orgs.org_key_5  left outer join consol_tree_orgs le_consol_tree_orgs on le_consol_tree_orgs.org_key = cle.customer_key left outer join customer le_consol_org_tree1 on le_consol_org_tree1.customer_key = le_consol_tree_orgs.org_key_0 left outer join customer le_consol_org_tree2 on le_consol_org_tree2.customer_key = le_consol_tree_orgs.org_key_1 left outer join customer le_consol_org_tree3 on le_consol_org_tree3.customer_key = le_consol_tree_orgs.org_key_2 left outer join customer le_consol_org_tree4 on le_consol_org_tree4.customer_key = le_consol_tree_orgs.org_key_3 left outer join customer le_consol_org_tree5 on le_consol_org_tree5.customer_key = le_consol_tree_orgs.org_key_4 left outer join customer le_consol_org_tree6 on le_consol_org_tree6.customer_key = le_consol_tree_orgs.org_key_5 left outer join consol_tree_orgs org_consol_tree_orgs on org_consol_tree_orgs.org_key = c.customer_key left outer join customer consol_org_tree1 on consol_org_tree1.customer_key = org_consol_tree_orgs.org_key_0 left outer join customer consol_org_tree2 on consol_org_tree2.customer_key = org_consol_tree_orgs.org_key_1 left outer join customer consol_org_tree3 on consol_org_tree3.customer_key = org_consol_tree_orgs.org_key_2 left outer join customer consol_org_tree4 on consol_org_tree4.customer_key = org_consol_tree_orgs.org_key_3 left outer join customer consol_org_tree5 on consol_org_tree5.customer_key = org_consol_tree_orgs.org_key_4 left outer join customer consol_org_tree6 on consol_org_tree6.customer_key = org_consol_tree_orgs.org_key_5 where c.customer_key is not null 
) wrE9 ON (
	wrE19."Organization Key" = wrE9."CUSTOMER_KEY"
)